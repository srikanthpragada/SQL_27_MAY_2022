01-JUN-2022
===========
Display unique salaries of employees in department IT

Display employees who are in department HR or having salary > 500000

Display leaves of type sick and casual 

Display employees where department is either HR or IT and 
salary < 800000

Display employees with ids 3 or 5 or 6 to 8

Display employees where name has t as last-but-one char

select * 
from employees
where fullname like '%e_'

Display employees working in dept where id starts with I 
and name of employee contains l twice.

select * 
from employees
where fullname like '%l%l%' and department_id like 'I%'


Commands
=========
insert into employees (fullname, job_id)
  values('Bill Gates', 'TL')

select * 
from employees
where department_id is null

select * 
from employees
where fullname like '_o%'


02-JUN-2022
===========
Display employees in the asc order of job and then joining date

Rename col description in jobs table to remarks 

Add gender to employees with check constrint for values m and f

Update gender col to 'm'

Update gender for some employees to 'f'

Commands
---------
select * 
from employees
where salary is not null 
order by department_id, salary desc

update employees set salary = salary + 100000 
where id = 3


03-JUN-2022
===========
update email with name without spaces followed @gmail.com 
for employees where email is null

Delete rows from employees where email is null

Display employees where length of name is > 10 and name 
contains space 

Display everything from space in name 

Find out month of joining for each employee without using strftime()

Display empname, joinedon, exp in years, 
category - Senior if exp  > 2 years
else junior 

Display employees where year of joining is previous year 


Commands
========
ALTER TABLE JOBS rename column DESCRIPTION to remarks

SELECT  ltrim('***....abc**','*.')

SELECT joinedon, strftime('%d-%m-%Y', joinedon)
from employees

SELECT  ifnull(email, 'Unknown') email
from employees

SELECT fullname, salary, iif(salary > 500000, 'High','Low') category
from employees

begin transaction;
update employees set salary = salary * 1.1 
where salary < 1000000;
select changes()
rollback;



04-JUN-2022
===========

Assignment
----------
select count(*)
from employees
where strftime('%Y', joinedon) =  strftime('%Y',date()) - 1

display year, no. of emp joined in that year 

display no. leaves taken by each emp

display empid, typeofleave, no. leaves 

display empid, total salary paid so far 

display department_id where avg salary is > 500000

display year and total no. leaves taken 

display emp id and total no. of vacation leaves taken 



Commands
----------
select sum(salary)
from employees

select avg(salary)
from employees
where department_id = 'IT'


select count(department_id)
from employees

select department_id, avg(salary)
from employees
group by department_id


select job_id,count(*)
from employees
group by job_id

select job_id,count(*)
from employees
where salary < 500000
group by job_id


select job_id,count(*)
from employees
where salary < 1000000
group by job_id
order by job_id


select department_id, job_id, round(avg(salary)) total_salary
from employees
group by department_id, job_id
order by 1,3

select strftime('%m', joinedon) Month, count(*) No_Employees
from employees
group by strftime('%m', joinedon)

select job_id
from employees
group by job_id 
having count(*) > 2

06-JUN-2022
=============

Assignments
------------
Disp emp name, leave type and leave date 

Disp emp name, salary, dept name, joinedon for all programmers

Disp emp name, no. of leave taken so far

Disp leave id, emp name, department name, leave type, leave date 

Disp job title where avg salary > 7500000

Disp name of employees who have been paid more than 50L so far

Disp emp name and no.of leaves taken - include employees who have not taken any leave.

Commands
----------
SELECT NAME, FULLNAME
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.ID)

SELECT fullname, salary, j.id, title 
FROM EMPLOYEES E JOIN jobs j
ON (E.job_id = j.id)

SELECT fullname, salary, title 
FROM EMPLOYEES E JOIN jobs j ON (E.job_id = j.id)
where salary > 500000


SELECT d.name, avg(salary)
FROM EMPLOYEES e join departments d on (d.id = e.department_id)
group by d.name

SELECT e.fullname Employee, d.name Department, j.title Job
FROM EMPLOYEES e join departments d on (d.id = e.department_id) 
join jobs j on (j.id = e.job_id)

SELECT  name
FROM EMPLOYEES e join departments d on (e.department_id = d.id)
group by name
having count(*) > 2 

SELECT fullname, name
FROM EMPLOYEES e join departments d on (e.department_id = d.id)
order by 1

select title, fullname
from jobs left outer join employees on (jobs.id = employees.job_id)

select title, count(*)
from jobs join employees on (jobs.id = employees.job_id)
group by title

select title, count(employees.id)
from jobs left outer join employees on (jobs.id = employees.job_id)
group by title
order by 2 desc

